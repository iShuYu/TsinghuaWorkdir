// Code to do the selection
// This specific script is to cut **J\Psi(1S)**, cut conditions are in Cut() method
// Author : zhaomr
// Date   : June 4 2015
// Input  : argv[1]
// Output : argv[2]

#define mct_cxx
//#define test
#include "../header/mct.h"
#include <TH2.h>
#include <TStyle.h>
#include <TCanvas.h>
#include <vector>
#include <string>
#include <TRandom.h>
#include <fstream>
#include <iostream>

using namespace std;

// mct : class generated by ROOT MakeClass()
// Tree : extra variables add to mct
class Tree : public mct
{
	public:
		Tree(TTree *tree=0) : mct(tree) {}

		// invariant_mass
		//int sigma;
		double psi_M0;
		double psi_MM;

		// Create a new tree using the old variables and the new variables
		TTree * Create(int sigma);
		Int_t Cut();
		void Loop();
};

	template <class T> 
inline T sqr(T x)
{
	return x * x;
}

int main(int argc, char* argv[])
{
	// configuration file
	//ifstream fin(argv[1]);
	//string input_file, output_file;

	// data
	TChain *input = new TChain("mct/mct", "");
	//fin >> input_file;
	input->Add(argv[1]);

	input->Show(0);

	Tree * tree = new Tree( (TTree*)input );
	//fin >> output_file;
	// File !! location to save the selected data
	TFile * file = new TFile(argv[2], "recreate");

	// Do the selection
	int sigma;
	sscanf(argv[3],"%d",&sigma);
	std::cout << "sigma " << sigma << std::endl;

	TTree* data_tree = tree->Create(sigma);

	// Save the new tree
	data_tree->Write();

	file->Close();
	return 0;
}

TTree* Tree::Create(int sigma)
{
	TRandom generator;
	// Create a new tree with all the variables definition but the values
	TTree *tree = fChain->CloneTree(0);

	// Add new variables definition 
	tree->Branch("psi_M0", &psi_M0, "psi_M0/D");
	tree->Branch("psi_MM", &psi_MM, "psi_MM/D");

	if (fChain == 0) return 0;

	Long64_t nentries = fChain->GetEntries();

	Long64_t nbytes = 0, nb = 0;

	// Loop for every entry to add the new variable
	for (Long64_t jentry=0; jentry<nentries;jentry++)
	{
		Long64_t ientry = LoadTree(jentry);

		if (ientry < 0) break;

		// Shutdown when real running
#ifdef test 
		if (jentry > 1000) break;
#endif

		nb = fChain->GetEntry(jentry);   nbytes += nb;

		// definition psi_M0
		psi_M0 = sqrt(sqr(mup_TRUEP_E + mum_TRUEP_E)
					- sqr(mup_TRUEP_X + mum_TRUEP_X)
					- sqr(mup_TRUEP_Y + mum_TRUEP_Y)
					- sqr(mup_TRUEP_Z + mum_TRUEP_Z) );
		psi_MM = generator.Gaus(psi_M0, sigma);

		tree->Fill();
	}

	return tree;
}
